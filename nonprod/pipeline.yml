resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: credhub
  type: docker-image
  source:
    repository: cfcommunity/credhub-resource
    tag: v0.1.1

resources:
- name: terraform-image
  type: docker-image
  source:
    repository: hashicorp/terraform
    tag: 0.11.14

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 3\.0\.(.*)
    sort_by: semver

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    endpoint: ((s3.endpoint))
    secret_access_key: ((s3_secret_access_key))
    regexp: platform-automation/platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    endpoint: ((s3.endpoint))
    secret_access_key: ((s3_secret_access_key))
    regexp: platform-automation/platform-automation-image-(.*).tgz

- name: pas-stemcell
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: pas-stemcell/bosh-stemcell-(.*).tgz

- name: pas-product
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: pas/cf-(.*).pivotal

- name: mysql-stemcell
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: mysql-stemcell/bosh-stemcell-(.*).tgz

- name: mysql-product
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: mysql/pivotal-mysql-(.*).pivotal

- name: rabbitmq-stemcell
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: rabbitmq-stemcell/bosh-stemcell-(.*).tgz

- name: rabbitmq-product
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: rabbitmq/p-rabbitmq-(.*).pivotal

- name: redis-stemcell
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: redis-stemcell/bosh-stemcell-(.*).tgz

- name: redis-product
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.pivnet_products))
    regexp: redis/p-redis-(.*).pivotal

- name: configuration
  type: git
  source:
    private_key: ((configuration_private_key.private_key))
    uri: ((configuration.uri))
    branch: ((configuration.branch))

- name: variable
  type: git
  source:
    private_key: ((configuration_private_key.private_key))
    uri: ((configuration.uri))
    branch: ((configuration.branch))

- name: lets-encrypt-cert
  type: credhub
  source:
    server: ((credhub-server))
    username: ((credhub-client))
    password: ((credhub-secret))
    path: /concourse/main/nonprod/lets_encrypt_cert
    skip_tls_validation: true

- name: ops-manager-backup
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets.backups))
    regexp: nonprod/ops-manager/installation-(.*).zip

groups:
- name: install
  jobs:
  - install-opsman
  - upload-and-stage-pas
  - configure-pas
  - upload-and-stage-mysql
  - configure-mysql
  - upload-and-stage-rabbitmq
  - configure-rabbitmq
  - upload-and-stage-redis
  - configure-redis
  - upload-stemcells
  - apply-product-changes
- name: iaas
  jobs:
  - pave-iaas
- name: fetch
  jobs:
  - fetch-platform-automation
  - fetch-pas
  - fetch-mysql
  - fetch-rabbitmq
  - fetch-redis
- name: backup
  jobs:
  - backup-ops-manager
- name: delete
  jobs:
  - delete-foundation

jobs:
- name: fetch-platform-automation
  plan:
  - get: platform-automation-pivnet
    # trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz

- name: fetch-pas
  plan:
  - aggregate:
    # - get: daily
    #   trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: variable
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
      PREFIX: ((credhub-interpolation-prefix))
      INTERPOLATION_PATHS: "nonprod/product-configs"
    input_mapping:
      files: variable
    output_mapping:
      interpolated-files: variable
  - task: download-pas-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: nonprod/product-configs/pas.yml
    input_mapping:
      config: variable
    output_mapping:
      downloaded-stemcell: pas-stemcell
  - aggregate:
    - put: pas-product
      params:
        file: downloaded-product/*.pivotal
    - put: pas-stemcell
      params:
        file: pas-stemcell/*.tgz

- name: fetch-mysql
  plan:
  - aggregate:
    # - get: daily
    #   trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: variable
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
      PREFIX: ((credhub-interpolation-prefix))
      INTERPOLATION_PATHS: "nonprod/product-configs"
    input_mapping:
      files: variable
    output_mapping:
      interpolated-files: variable
  - task: download-mysql-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: nonprod/product-configs/mysql.yml
    input_mapping:
      config: variable
    output_mapping:
      downloaded-stemcell: mysql-stemcell
  - aggregate:
    - put: mysql-product
      params:
        file: downloaded-product/*.pivotal
    - put: mysql-stemcell
      params:
        file: mysql-stemcell/*.tgz

- name: fetch-rabbitmq
  plan:
  - aggregate:
    # - get: daily
    #   trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: variable
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
      PREFIX: ((credhub-interpolation-prefix))
      INTERPOLATION_PATHS: "nonprod/product-configs"
    input_mapping:
      files: variable
    output_mapping:
      interpolated-files: variable
  - task: download-rabbitmq-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: nonprod/product-configs/rabbitmq.yml
    input_mapping:
      config: variable
    output_mapping:
      downloaded-stemcell: rabbitmq-stemcell
  - aggregate:
    - put: rabbitmq-product
      params:
        file: downloaded-product/*.pivotal
    - put: rabbitmq-stemcell
      params:
        file: rabbitmq-stemcell/*.tgz

- name: fetch-redis
  plan:
  - aggregate:
    # - get: daily
    #   trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: variable
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
      PREFIX: ((credhub-interpolation-prefix))
      INTERPOLATION_PATHS: "nonprod/product-configs"
    input_mapping:
      files: variable
    output_mapping:
      interpolated-files: variable
  - task: download-redis-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: nonprod/product-configs/redis.yml
    input_mapping:
      config: variable
    output_mapping:
      downloaded-stemcell: redis-stemcell
  - aggregate:
    - put: redis-product
      params:
        file: downloaded-product/*.pivotal
    - put: redis-stemcell
      params:
        file: redis-stemcell/*.tgz

- name: pave-iaas
  plan:
  - aggregate:
    - get: configuration
    - get: terraform-image
    - get: platform-automation-image
      params:
        unpack: true
    - get: lets-encrypt-cert
  - task: terraform-apply
    image: terraform-image
    file: configuration/tasks/terraform-apply.yml
    input_mapping:
      configuration: configuration
    params:
      TF_VAR_subscription_id: ((azure_subscription_id))
      TF_VAR_tenant_id: ((azure_tenant_id))
      TF_VAR_client_id: ((azure_client_id))
      TF_VAR_client_secret: ((azure_client_secret))
      ARM_ACCESS_KEY: ((pcfrefazureacct_secret_key))
      TERRAFORM_CONFIG_DIR: nonprod/terraform
  - task: credhub-put
    image: platform-automation-image
    file: configuration/tasks/credhub-set-certificate.yml
    input_mapping:
      certs: generated-certs
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
      NAME: /concourse/main/nonprod/lets_encrypt_cert

- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: variable
      - get: lets-encrypt-cert
        # trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: variable
        config: variable
      params:
        ENV_FILE: nonprod/vars/env.yml
        AUTH_CONFIG_FILE: nonprod/vars/auth.yml
    - task: configure-ssl
      image: platform-automation-image
      file: configuration/tasks/update-ssl-certificate.yml
      input_mapping:
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml
        CERTIFICATE_PEM: |
          ((lets_encrypt_cert.certificate))
          ((lets_encrypt_cert.ca))
        PRIVATE_KEY_PEM: ((lets_encrypt_cert.private_key))
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        config: configuration
        env: variable
        vars: variable
      params:
        VARS_FILES: vars/nonprod/vars/director-vars.yml
        ENV_FILE: nonprod/vars/env.yml
        DIRECTOR_CONFIG_FILE: nonprod/config/director.yml
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml

- name: backup-ops-manager
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: variable
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
      PREFIX: ((credhub-interpolation-prefix))
      INTERPOLATION_PATHS: "nonprod/vars"
    input_mapping:
      files: variable
    output_mapping:
      interpolated-files: variable
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: variable
    params:
      ENV_FILE: nonprod/vars/env.yml
      INSTALLATION_FILE: installation-$timestamp.zip
  - put: ops-manager-backup
    params:
      file: installation/installation-*.zip

- name: upload-and-stage-pas
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
        - install-opsman
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: variable
      - get: configuration
      - get: pas-product
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: upload-pas
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: pas-product
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: stage-pas
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      params:
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        product: pas-product
        env: variable

- name: configure-pas
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upload-and-stage-pas
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: pas-product
      - get: configuration
      - get: variable
      - get: lets-encrypt-cert
        # trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: configure-pas
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      params:
        CONFIG_FILE: nonprod/config/cf.yml
        VARS_FILES: vars/nonprod/vars/cf-vars.yml
        OPS_FILES: config/nonprod/operations/minimal-pas-2.4-instance-count.yml
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        config: configuration
        env: variable
        vars: variable

- name: upload-and-stage-mysql
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
        - install-opsman
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: variable
      - get: configuration
      - get: mysql-product
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: upload-mysql
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: mysql-product
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: stage-mysql
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      params:
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        product: mysql-product
        env: variable

- name: configure-mysql
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: variable
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: configure-mysql
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      params:
        CONFIG_FILE: nonprod/config/mysql.yml
        VARS_FILES: vars/nonprod/vars/mysql-vars.yml
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        config: configuration
        env: variable
        vars: variable

- name: upload-and-stage-rabbitmq
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
        - install-opsman
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: variable
      - get: configuration
      - get: rabbitmq-product
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: upload-rabbitmq
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: rabbitmq-product
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: stage-rabbitmq
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      params:
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        product: rabbitmq-product
        env: variable

- name: configure-rabbitmq
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upload-and-stage-rabbitmq
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: variable
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: configure-rabbitmq
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      params:
        CONFIG_FILE: nonprod/config/rabbitmq.yml
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        config: configuration
        env: variable
        vars: variable

- name: upload-and-stage-redis
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
        - install-opsman
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: variable
      - get: configuration
      - get: redis-product
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: upload-redis
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: redis-product
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: stage-redis
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      params:
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        product: redis-product
        env: variable

- name: configure-redis
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
        - upload-and-stage-redis
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: variable
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: configure-redis
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      params:
        CONFIG_FILE: nonprod/config/redis.yml
        VARS_FILES: vars/nonprod/vars/redis-vars.yml
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        config: configuration
        env: variable
        vars: variable

- name: upload-stemcells
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - configure-pas
          - configure-mysql
          - configure-rabbitmq
          - configure-redis
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: pas-stemcell
        trigger: true
      - get: mysql-stemcell
        trigger: true
      - get: rabbitmq-stemcell
        trigger: true
      - get: redis-stemcell
        trigger: true
      - get: configuration
      - get: variable
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: upload-pas-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: variable
        stemcell: pas-stemcell
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: upload-mysql-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: variable
        stemcell: mysql-stemcell
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: upload-rabbitmq-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: variable
        stemcell: rabbitmq-stemcell
      params:
        ENV_FILE: nonprod/vars/env.yml
    - task: upload-redis-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: variable
        stemcell: redis-stemcell
      params:
        ENV_FILE: nonprod/vars/env.yml

- name: apply-product-changes
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upload-stemcells
          - configure-pas
          - configure-mysql
          - configure-rabbitmq
          - configure-redis
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: variable
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: apply-changes
      image: platform-automation-image
      file: configuration/tasks/om-apply-changes-skip-unchanged.yml
      params:
        ENV_FILE: nonprod/vars/env.yml
      input_mapping:
        env: variable

- name: delete-foundation
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: variable
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
        PREFIX: ((credhub-interpolation-prefix))
        INTERPOLATION_PATHS: "nonprod/vars"
      input_mapping:
        files: variable
      output_mapping:
        interpolated-files: variable
    - task: delete-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/delete-installation.yml
      input_mapping:
        env: variable
      params:
        ENV_FILE: nonprod/vars/env.yml