resource_types:
- name: credhub
  type: docker-image
  source:
    repository: cfcommunity/credhub-resource
    tag: v0.1.1

x-resource-anchors:
  s3-products: &s3-products
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    endpoint: ((s3.endpoint))
    secret_access_key: ((s3_secret_access_key))

resources:
- name: terraform-image
  type: docker-image
  source:
    repository: hashicorp/terraform
    tag: 0.11.14

- name: platform-automation-tasks
  type: s3
  source:
    <<: *s3-products
    regexp: platform-automation/platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    <<: *s3-products
    regexp: platform-automation/platform-automation-image-(.*).tgz

- name: configuration
  type: git
  source:
    private_key: ((configuration_private_key.private_key))
    uri: ((configuration.uri))
    branch: ((configuration.branch))

- name: lets-encrypt-cert
  type: credhub
  source:
    server: ((credhub-server))
    username: ((credhub-client))
    password: ((credhub-secret))
    path: /concourse/main/((env_name))/lets_encrypt_cert
    skip_tls_validation: true

groups:
- name: install
  jobs:
  - pave-iaas
  - install-opsman

x-job-anchors:
  credhub-interpolate-all: &credhub-interpolate-all
    task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: ((credhub-interpolation-prefix))
      INTERPOLATION_PATHS: "((env_name))/vars"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration-with-secrets

  _get-platform-automation-image: &_get-platform-automation-image
    get: platform-automation-image
    params:
      unpack: true

  _get-platform-automation-tasks: &_get-platform-automation-tasks
    get: platform-automation-tasks
    params:
      unpack: true

  get-platform-automation-resources: &get-platform-automation-resources
    aggregate:
    - <<: *_get-platform-automation-image
    - <<: *_get-platform-automation-tasks

  get-platform-automation-tasks-only: &get-platform-automation-tasks-only
    aggregate:
    - <<: *_get-platform-automation-image

jobs:
- name: pave-iaas
  plan:
  - <<: *get-platform-automation-tasks-only
  - aggregate:
    - get: configuration
    - get: terraform-image
  - task: terraform-apply
    image: terraform-image
    file: configuration/tasks/terraform-apply.yml
    input_mapping:
      configuration: configuration
    params:
      TF_VAR_subscription_id: ((azure_subscription_id))
      TF_VAR_tenant_id: ((azure_tenant_id))
      TF_VAR_client_id: ((azure_client_id))
      TF_VAR_client_secret: ((azure_client_secret))
      ARM_ACCESS_KEY: ((pcfrefazureacct_secret_key))
      TERRAFORM_CONFIG_DIR: ((env_name))/terraform
  - task: credhub-put
    image: platform-automation-image
    file: configuration/tasks/credhub-set-certificate.yml
    input_mapping:
      certs: generated-certs
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      NAME: /concourse/main/((env_name))/lets_encrypt_cert

- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - <<: *get-platform-automation-resources
  - aggregate:
    - get: configuration
    - get: lets-encrypt-cert
  - <<: *credhub-interpolate-all
  - task: configure-ssl
    image: platform-automation-image
    file: configuration/tasks/update-ssl-certificate.yml
    input_mapping:
      env: configuration-with-secrets
    params:
      ENV_FILE: ((env_name))/vars/env.yml
      CERTIFICATE_PEM: |
        ((lets_encrypt_cert.certificate))
        ((lets_encrypt_cert.ca))
      PRIVATE_KEY_PEM: ((lets_encrypt_cert.private_key))
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: configuration
      env: configuration-with-secrets
      vars: configuration-with-secrets
    params:
      VARS_FILES: vars/((env_name))/vars/director-vars.yml
      ENV_FILE: ((env_name))/vars/env.yml
      DIRECTOR_CONFIG_FILE: ((env_name))/config/director.yml
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: configuration-with-secrets
    params:
      ENV_FILE: ((env_name))/vars/env.yml